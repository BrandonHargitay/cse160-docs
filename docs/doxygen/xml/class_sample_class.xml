<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_sample_class" kind="class" language="C++" prot="public">
    <compoundname>SampleClass</compoundname>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_sample_class_1a3debf34af44aab01bd75d59aedef88d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SampleClass::printHello</definition>
        <argsstring>()</argsstring>
        <name>printHello</name>
        <qualifiedname>SampleClass::printHello</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* This function prints hello
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ashwinrohit/Developer/cse160-docs/src/hello.cpp" line="14" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_sample_class_1ad065a7b6a0a9e5afb998376bd310f13a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int SampleClass::computeShaders2D</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>computeShaders2D</name>
        <qualifiedname>SampleClass::computeShaders2D</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* This function computes the shader values for a given pixel
* </verbatim> Here are the function parameters:</para>
<para><computeroutput>x:</computeroutput> x-coordinate of the pixel</para>
<para><computeroutput>y:</computeroutput> y-coordinate of the pixel <simplesect kind="return"><para>Computed shader value for pixel (x, y) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ashwinrohit/Developer/cse160-docs/src/hello.cpp" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_sample_class_1aaf718b2754218ea0e6992a64763673c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int SampleClass::computeShaders3D</definition>
        <argsstring>(int x, int y, int z)</argsstring>
        <name>computeShaders3D</name>
        <qualifiedname>SampleClass::computeShaders3D</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* This function computes the shader values for a given pixel in 3D.
* </verbatim> For 2D, use <ref refid="class_sample_class_1ad065a7b6a0a9e5afb998376bd310f13a" kindref="member">computeShaders2D</ref>. Here are the function parameters:</para>
<para><computeroutput>x:</computeroutput> x-coordinate of the pixel</para>
<para><computeroutput>y:</computeroutput> y-coordinate of the pixel</para>
<para><computeroutput>z:</computeroutput> z-coordinate of the pixel <simplesect kind="return"><para>Computed shader value for pixel (x, y, z) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ashwinrohit/Developer/cse160-docs/src/hello.cpp" line="41" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* Hello, World!
* </verbatim> </para>
    </detaileddescription>
    <location file="/Users/ashwinrohit/Developer/cse160-docs/src/hello.cpp" line="8" column="1" bodyfile="/Users/ashwinrohit/Developer/cse160-docs/src/hello.cpp" bodystart="8" bodyend="42"/>
    <listofallmembers>
      <member refid="class_sample_class_1ad065a7b6a0a9e5afb998376bd310f13a" prot="public" virt="non-virtual"><scope>SampleClass</scope><name>computeShaders2D</name></member>
      <member refid="class_sample_class_1aaf718b2754218ea0e6992a64763673c8" prot="public" virt="non-virtual"><scope>SampleClass</scope><name>computeShaders3D</name></member>
      <member refid="class_sample_class_1a3debf34af44aab01bd75d59aedef88d0" prot="public" virt="non-virtual"><scope>SampleClass</scope><name>printHello</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
